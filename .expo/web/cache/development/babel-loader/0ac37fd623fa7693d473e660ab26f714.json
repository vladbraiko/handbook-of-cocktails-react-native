{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vladyslavbraiko/Desktop/handbook-of-cocktails-react-native/src/components/Drinks/DrinksList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Icon } from \"react-native-elements\";\nimport { loadNextSection } from \"../../redux/operations/app-operations\";\nimport Drink from \"./Drink/Drink\";\nimport { styles } from \"./Drinks.styles\";\nimport { fetchFilters } from \"../../redux/operations/app-operations\";\nimport { getDrinks } from \"../../redux/selectors/app-selectors\";\n\nvar DrinksList = function DrinksList(_ref) {\n  var navigation = _ref.navigation,\n      fetchFilters = _ref.fetchFilters,\n      drinks = _ref.drinks,\n      loadNextSection = _ref.loadNextSection;\n\n  var pressFiltersHandler = function pressFiltersHandler() {\n    return navigation.navigate(\"Filters\");\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isEnd = _useState4[0],\n      setIsEnd = _useState4[1];\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableNativeFeedback, {\n          onPress: pressFiltersHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }\n        }, React.createElement(Icon, {\n          name: \"filter\",\n          type: \"material-community\",\n          style: styles.filterIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        }));\n      }\n    });\n  }, [navigation]);\n  useEffect(function () {\n    fetchFilters();\n  }, [fetchFilters]);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(SectionList, {\n    sections: drinks,\n    keyExtractor: function keyExtractor(item) {\n      return item.idDrink;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Drink, _extends({}, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 35\n        }\n      }));\n    },\n    renderSectionHeader: function renderSectionHeader(_ref3) {\n      var filter = _ref3.section.filter;\n      return React.createElement(Text, {\n        style: styles.drinksHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, filter);\n    },\n    onEndReached: function onEndReached() {\n      setLoading(true);\n      loadNextSection().then(function (data) {\n        setIsEnd(data);\n        setLoading(false);\n      });\n    },\n    renderSectionFooter: function renderSectionFooter() {\n      if (isEnd) return React.createElement(View, {\n        style: styles.end,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.endText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, \"You have reached the end\"));\n      if (loading) return React.createElement(View, {\n        style: styles.loader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0000ff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }));\n    },\n    stickySectionHeadersEnabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    drinks: getDrinks(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchFilters: fetchFilters,\n  loadNextSection: loadNextSection\n})(DrinksList);","map":{"version":3,"sources":["/Users/vladyslavbraiko/Desktop/handbook-of-cocktails-react-native/src/components/Drinks/DrinksList.js"],"names":["React","useEffect","useState","connect","Icon","loadNextSection","Drink","styles","fetchFilters","getDrinks","DrinksList","navigation","drinks","pressFiltersHandler","navigate","loading","setLoading","isEnd","setIsEnd","useLayoutEffect","setOptions","headerRight","filterIcon","item","idDrink","filter","section","drinksHeader","then","data","end","endText","loader","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  ActivityIndicator,\n  SectionList,\n  Text,\n  TouchableNativeFeedback,\n  View,\n} from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { loadNextSection } from \"../../redux/operations/app-operations\";\nimport Drink from \"./Drink/Drink\";\nimport { styles } from \"./Drinks.styles\";\nimport { fetchFilters } from \"../../redux/operations/app-operations\";\nimport { getDrinks } from \"../../redux/selectors/app-selectors\";\n\nconst DrinksList = ({ navigation, fetchFilters, drinks, loadNextSection }) => {\n  const pressFiltersHandler = () => navigation.navigate(\"Filters\");\n  const [loading, setLoading] = useState(false);\n  const [isEnd, setIsEnd] = useState(false);\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <TouchableNativeFeedback onPress={pressFiltersHandler}>\n          <Icon\n            name=\"filter\"\n            type=\"material-community\"\n            style={styles.filterIcon}\n          />\n        </TouchableNativeFeedback>\n      ),\n    });\n  }, [navigation]);\n\n  useEffect(() => {\n    fetchFilters();\n  }, [fetchFilters]);\n\n  return (\n    <View>\n      <SectionList\n        sections={drinks}\n        keyExtractor={(item) => item.idDrink}\n        renderItem={({ item }) => <Drink {...item} />}\n        renderSectionHeader={({ section: { filter } }) => (\n          <Text style={styles.drinksHeader}>{filter}</Text>\n        )}\n        onEndReached={() => {\n          setLoading(true);\n          loadNextSection().then((data) => {\n            setIsEnd(data);\n            setLoading(false);\n          });\n        }}\n        renderSectionFooter={() => {\n          if (isEnd)\n            return (\n              <View style={styles.end}>\n                <Text style={styles.endText}>You have reached the end</Text>\n              </View>\n            );\n          if (loading)\n            return (\n              <View style={styles.loader}>\n                <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n              </View>\n            );\n        }}\n        stickySectionHeadersEnabled\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  drinks: getDrinks(state),\n});\n\nexport default connect(mapStateToProps, { fetchFilters, loadNextSection })(\n  DrinksList\n);\n"]},"metadata":{},"sourceType":"module"}